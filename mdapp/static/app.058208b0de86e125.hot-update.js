"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(typeof self !== 'undefined' ? self : this)["webpackHotUpdatemd_ui"]("app",{

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/HelloWorld.vue?vue&type=script&lang=js&":
/*!******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/HelloWorld.vue?vue&type=script&lang=js& ***!
  \******************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ImageThumb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ImageThumb */ \"./src/components/ImageThumb.vue\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  components: {\n    ImageThumb: _ImageThumb__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n  },\n  data: () => ({\n    possible_modes: ['Text -> Image', 'List -> Image'],\n    current_mode: 0,\n    alert: false,\n    alertMessage: \"Warning, generated images contained some not safe for work content and have been replaced.\",\n    prompt: \"product photo, beautiful vase, zen garden, still life, photoreal, bokeh, depth of field, calming\",\n    image_history: [],\n    image_id: '',\n    selected_image_id: '',\n    selected_image_saved: false,\n    promptA: \"product photo, beautiful vase, zen garden, still life, photoreal, bokeh, depth of field, calming\",\n    promptB: \"renaissance painting, beautiful vase, zen garden, still life, photoreal, bokeh, depth of field, calming\",\n    prompt_blend: 0.5,\n    seed: 42,\n    width: {\n      label: 'width',\n      val: 512,\n      color: 'blue lighten-1'\n    },\n    height: {\n      label: 'height',\n      val: 512,\n      color: 'blue lighten-1'\n    },\n    scale: {\n      label: 'scale',\n      val: 7,\n      color: 'blue lighten-1'\n    },\n    steps: {\n      label: 'steps',\n      val: 25,\n      color: 'blue lighten-1'\n    },\n    num_of_images: 1\n  }),\n\n  mounted() {\n    window.addEventListener(\"resize\", this.onWindowResize);\n    const loadHistoryOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: ''\n      })\n    };\n    fetch(this.api_server + '/load_history/', loadHistoryOptions).then(response => response.json()).then(data => {\n      if (data.result == 'OK') {\n        data.prompts.forEach(prompt => {\n          this.image_history.push({\n            prompt_id: prompt.prompt_id,\n            settings: {\n              seed: prompt.seed,\n              width: prompt.width,\n              height: prompt.height,\n              scale: prompt.scale,\n              steps: prompt.steps,\n              prompt: prompt.prompt,\n              prompt_id: prompt.prompt_id,\n              saved: prompt.saved,\n              status: prompt.status,\n              mode: prompt.mode\n            }\n          });\n        });\n      }\n    });\n  },\n\n  destroyed() {\n    window.removeEventListener(\"resize\", this.onWindowResize);\n  },\n\n  watch: {},\n  methods: {\n    time_estimate(width, height, steps) {\n      const per_s = 22000.0 / (768 * 768) / 50.0;\n      const per_w = 22000 / (50 * per_s) / (768 * 768);\n      const total_ms = per_w * width * (per_w * height) * (per_s * steps);\n      return total_ms * 1.2;\n    },\n\n    show_image(settings, url) {\n      this.seed = settings.seed;\n      this.width.val = settings.width;\n      this.height.val = settings.height;\n      this.steps.val = settings.steps;\n      this.scale.val = settings.scale;\n      this.selected_image_id = settings.prompt_id;\n      this.selected_image_saved = settings.saved;\n      this.current_mode = settings.mode;\n\n      if (settings.mode == 'List -> Image') {\n        this.promptA = settings.prompt[0].text;\n        this.promptB = settings.prompt[1].text;\n        this.prompt_blend = settings.prompt[1].weight;\n      } else {\n        this.prompt = settings.prompt;\n      }\n\n      var display_image = document.getElementById('display_image');\n\n      if (display_image != null) {\n        display_image.setAttribute('src', url);\n        this.onWindowResize();\n      } else {\n        document.querySelector('#imgcontainer').innerHTML = '';\n        let img = document.createElement('img');\n        img.id = \"display_image\";\n        var downloadingImage = new Image();\n\n        downloadingImage.onload = function () {\n          img.src = url;\n        };\n\n        downloadingImage.src = url;\n        document.querySelector('#imgcontainer').appendChild(img);\n        this.onWindowResize();\n      }\n    },\n\n    textarea_keypress() {\n      this.onGenerate();\n    },\n\n    onSave() {\n      const saveOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt_id: this.selected_image_id\n        })\n      };\n      fetch(this.api_server + '/save_prompt/', saveOptions).then(response => response.json()).then(data => {\n        if (data.result == 'OK') {\n          var i = 0;\n\n          for (i; i < this.image_history.length; i++) {\n            if (this.selected_image_id == this.image_history[i].prompt_id) {\n              this.image_history[i].settings.saved = true;\n              break;\n            }\n          }\n\n          this.selected_image_saved = true;\n        } else if (data.result == \"ERR\") {\n          this.warning(data.message);\n        }\n      });\n    },\n\n    onDelete() {\n      const deleteOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt_id: this.selected_image_id\n        })\n      };\n      fetch(this.api_server + '/delete_prompt/', deleteOptions).then(response => response.json()).then(data => {\n        if (data.result == 'OK') {\n          var i = 0;\n          var found = false;\n\n          for (i; i < this.image_history.length; i++) {\n            if (this.selected_image_id == this.image_history[i].prompt_id) {\n              found = true;\n              break;\n            }\n          }\n\n          if (found) {\n            this.image_history.splice(i, 1);\n\n            if (i > 0 && this.image_history.length > 0) {\n              this.selected_image_id = this.image_history[i - 1].prompt_id;\n              this.selected_image_saved = this.image_history[i - 1].settings.saved;\n              var display_image = document.getElementById('display_image');\n              display_image.setAttribute('src', this.api_server + \"/download_prompt/?prompt_id=\" + this.image_history[i - 1].prompt_id);\n              this.onWindowResize();\n            } else {\n              this.selected_image_id = '';\n              this.selected_image_saved = false;\n            }\n          }\n        } else if (data.result == \"ERR\") {\n          this.warning(data.message);\n        }\n      });\n    },\n\n    onExplore() {\n      this.seed = Math.floor(Math.random() * 10000000);\n      this.onGenerate();\n    },\n\n    onGenerate() {\n      for (var i = 0; i < this.num_of_images; i++) {\n        const seed_number = this.seed + i + i * Math.floor(Math.random() * 100000);\n        const prompt_value = this.current_mode == 1 ? [{\n          text: this.promptA,\n          weight: 1.0 - this.prompt_blend\n        }, {\n          text: this.promptB,\n          weight: this.prompt_blend\n        }] : this.prompt;\n        fetch(this.api_server + '/submit_prompt/', {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            prompt: prompt_value,\n            w: this.width.val,\n            h: this.height.val,\n            scale: this.scale.val,\n            steps: this.steps.val,\n            seed: seed_number,\n            mode: this.current_mode\n          })\n        }).then(response => response.json()).then(data => {\n          if (data.result == \"OK\") {\n            this.image_history.push({\n              prompt_id: data.prompt_id,\n              settings: {\n                seed: seed_number,\n                width: this.width.val,\n                height: this.height.val,\n                scale: this.scale.val,\n                steps: this.steps.val,\n                prompt: prompt_value,\n                saved: false,\n                mode: this.current_mode,\n                status: 0,\n                prompt_id: data.prompt_id,\n                gen_time: this.time_estimate(this.width.val, this.height.val, this.steps.val)\n              }\n            });\n          } else if (data.result == \"ERR\") {\n            this.warning(data.message);\n          }\n\n          console.log(data);\n        });\n      }\n\n      this.num_of_images = 1;\n    },\n\n    onWindowResize() {\n      var container = document.querySelector('#imgcontainer');\n      var image_container = document.querySelector('#main');\n      var width = image_container.offsetWidth;\n      var height = window.innerHeight - 135;\n\n      if (this.current_mode == 1) {\n        height = window.innerHeight - 135;\n      }\n\n      container.style.width = width + \"px\";\n      container.style.height = height + \"px\";\n    },\n\n    warning(text) {\n      this.alertMessage = text;\n      this.alert = true;\n      window.setTimeout(() => {\n        this.alert = false;\n        console.log(\"hide alert after 3 seconds\");\n      }, 3000);\n    }\n\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/HelloWorld.vue?vue&type=script&lang=js&\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!./node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/HelloWorld.vue?vue&type=style&index=0&id=469af010&lang=css&":
/*!************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!./node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/HelloWorld.vue?vue&type=style&index=0&id=469af010&lang=css& ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.text2image_input {\\n    height: 100px !important;\\n}\\n.imgh {\\n    display: block;\\n    border-radius: 4px;\\n    -o-object-fit: contain;\\n       object-fit: contain;\\n    min-width:100%;\\n    min-height:100%;\\n    max-width: 100%;\\n    max-height: 100%;\\n    margin-bottom: 4px;\\n}\\n.v-alert {\\n  position: fixed;\\n  left:0;\\n  width:100%;\\n  top: 0px;\\n  z-index: 10000;\\n  margin: 0 auto;\\n}\\n\", \"\"]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/Y2xvbmVkUnVsZVNldC0xMi51c2VbMV0hLi9ub2RlX21vZHVsZXMvQHZ1ZS92dWUtbG9hZGVyLXYxNS9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvZGlzdC9janMuanM/P2Nsb25lZFJ1bGVTZXQtMTIudXNlWzJdIS4vbm9kZV9tb2R1bGVzL0B2dWUvdnVlLWxvYWRlci12MTUvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9zcmMvY29tcG9uZW50cy9IZWxsb1dvcmxkLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTQ2OWFmMDEwJmxhbmc9Y3NzJi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZF91aS8uL3NyYy9jb21wb25lbnRzL0hlbGxvV29ybGQudnVlPzlhYzIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX05PX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9ub1NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9OT19TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIlxcbi50ZXh0MmltYWdlX2lucHV0IHtcXG4gICAgaGVpZ2h0OiAxMDBweCAhaW1wb3J0YW50O1xcbn1cXG4uaW1naCB7XFxuICAgIGRpc3BsYXk6IGJsb2NrO1xcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICAgIC1vLW9iamVjdC1maXQ6IGNvbnRhaW47XFxuICAgICAgIG9iamVjdC1maXQ6IGNvbnRhaW47XFxuICAgIG1pbi13aWR0aDoxMDAlO1xcbiAgICBtaW4taGVpZ2h0OjEwMCU7XFxuICAgIG1heC13aWR0aDogMTAwJTtcXG4gICAgbWF4LWhlaWdodDogMTAwJTtcXG4gICAgbWFyZ2luLWJvdHRvbTogNHB4O1xcbn1cXG4udi1hbGVydCB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBsZWZ0OjA7XFxuICB3aWR0aDoxMDAlO1xcbiAgdG9wOiAwcHg7XFxuICB6LWluZGV4OiAxMDAwMDtcXG4gIG1hcmdpbjogMCBhdXRvO1xcbn1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!./node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/HelloWorld.vue?vue&type=style&index=0&id=469af010&lang=css&\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ !function() {
/******/ 	__webpack_require__.h = function() { return "131ffdd2d4f42812"; }
/******/ }();
/******/ 
/******/ }
);